const express = require('express');
const cors = require('cors');
const app = express();
const port = 3000;

app.use(cors());
app.use(express.json());

// 流式调用 AI API 的路由
app.post('/chat', async (req, res) => {
  const { message } = req.body;

  if (!message) {
    return res.status(400).send('Message is required');
  }

  try {
    // 调用 AI API
    const aiResponse = await fetch('https://your-api-endpoint.com/chat', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ message }),
    });

    if (!aiResponse.ok) {
      throw new Error('AI API request failed');
    }

    // 设置响应头为流式传输
    res.setHeader('Content-Type', 'text/plain');
    res.setHeader('Transfer-Encoding', 'chunked');

    // 流式读取 AI API 的响应并转发给前端
    const reader = aiResponse.body.getReader();
    const decoder = new TextDecoder();

    while (true) {
      const { done, value } = await reader.read();
      if (done) break;

      const chunk = decoder.decode(value, { stream: true });
      res.write(chunk); // 将数据块发送到前端
    }

    res.end(); // 结束响应
  } catch (error) {
    console.error(error);
    res.status(500).send('Error fetching AI response');
  }
});

app.listen(port, () => {
  console.log(`Backend server running at http://localhost:${port}`);
});
